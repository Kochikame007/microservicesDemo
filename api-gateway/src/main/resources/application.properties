#discovery-server url with its credentials
eureka.client.serviceUrl.defaultZone=http://eureka:password@localhost:8761/eureka

#application name
spring.application.name=api-gateway

#logging config
logging.level.root=INFO
logging.level.org.springframework.cloud.gateway.route.RouteDefinitionLocator =INFO
logging.level.org.springframework.cloud.gateway=TRACE

#below properties define properties related to :
#route ID for service route
#target uri for the service route using loadbalancer lb
#predicate for service route, matching against "/api/${service}"

#product-service
spring.cloud.gateway.routes[0].id =product-service
spring.cloud.gateway.routes[0].uri=lb://product-service
spring.cloud.gateway.routes[0].predicates[0]=Path=/api/product

#inventory-service
spring.cloud.gateway.routes[1].id =inventory-service
spring.cloud.gateway.routes[1].uri=lb://inventory-service
spring.cloud.gateway.routes[1].predicates[0]=Path=/api/inventory

#order-service
spring.cloud.gateway.routes[2].id =order-service
spring.cloud.gateway.routes[2].uri=lb://order-service
spring.cloud.gateway.routes[2].predicates[0]=Path=/api/order

# discovery-service
spring.cloud.gateway.routes[3].id =discovery-server
spring.cloud.gateway.routes[3].uri=http://localhost:8761
spring.cloud.gateway.routes[3].predicates[0]=Path=/eureka/web 
#modifying the request path before forwarding
spring.cloud.gateway.routes[3].filters[0]=SetPath=/

#discovery-server client side pages
spring.cloud.gateway.routes[4].id =discovery-server-static
spring.cloud.gateway.routes[4].uri=http://localhost:8761
#allowing all the routes that matches "/eurerka/**"
spring.cloud.gateway.routes[4].predicates[0]=Path=/eureka/**

#keycloak issuer-uri to fetch all the detail
spring.security.oauth2.resourceserver.jwt.issuer-uri=http://localhost:9000/realms/microservices-realm

#zipkin/prometheus config
spring.zipkin.base-url=http://localhost:9411
management.metrics.export.prometheus.enabled=true
management.tracing.export.zipkin.enabled=true
management.tracing.sampling.probability=1.0
#logging.pattern.level=%5p [${spring.zipkin.service.name:${spring.application.name:}},%X{traceId:-},%X{spanId:-}]


# Actuator Prometheus Endpoint
management.endpoints.web.exposure.include= prometheus
server.port=8181
logging.pattern.level=%5p [${spring.application.name:},%X{traceId:-},%X{spanId:-}]